############################################################################################
# Настройка сервера для совместной работы нескольких разработчиков под личными учетками
############################################################################################

# Настройка Apache для совместной работы
# В файле /etc/apache2/envvars заменить группу вебсервера с www-data на dev
# export APACHE_RUN_GROUP=dev
# В том же файле дописать umask 0002. Таким образом все файлы и папки, который будет создавать Apache, будут иметь разрешения 664 и 775 (изначально umask 0022 = разрешения 644 и 755)

sudo vim /etc/apache2/envvars
export APACHE_RUN_USER=www-data
export APACHE_RUN_GROUP=dev

# Нужно задать такой же umask для всех пользователей
# Создать файл /etc/profile.d/setumask.sh с содержимым “umask 002” (без кавычек и первого нуля)

sudo touch /etc/profile.d/setumask.sh
sudo vim /etc/profile.d/setumask.sh
umask 0002

# Настроить разрешения на файлах и папках проекта
# Разрешения для файлов 664, настраивается для текущей папки (рекурсивно) командой:
sudo find . -type f -exec chmod 0664 {} ';'

# Разрешения для файлов 775, настраивается для текущей папки (рекурсивно) командой:
sudo find . -type d -exec chmod 0775 {} ';'

# Пользователей для разработчиков нужно создавать следующей командой (заменить <username> фамилией пользователя на англ):
sudo adduser --ingroup dev <username>

# Настроить gulp для работы нескольких пользователей
# Обычно ошибки в мульти-пользовательском режиме происходят из-за того что gulp проверяем разрешения на файлах и если они отличные от дефолтных пытается их изменить. Это может вызвать ошибку в мульти-пользовательском режиме. Для решения этой проблемы нужно в файле gulpfile.js добавить следующий параметр:
# .pipe(gulp.dest(file.build.css, {mode: '0664'}));

# Настроить GIT, не трекать изменения пермишенов в файлах
git config core.fileMode false
